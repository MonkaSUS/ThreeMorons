/ - индекс, ниче не возвращает
GET /group/all - Возвращает List<Group> всех групп, которые есть в БД.
GET /group/?groupName={строка с названием группы} - возвращает конкретную группу с названием.
POST /group - Требует userClassId 2 админ, иначе Unauthorized.принимает в себя GroupInput. возвращает Dictionary ошибок, если ввод не прошёл валидацию или Problem если ошибка возникла где-то в мясе сервера. Если всё успешно, то возвращает 201 Created.POST 
GET /group/search/?searchTerm= - принимает в адресе поисковый термин. Производит поиск по названию группы, возвращает лист всех совпадений

GET /skippedClass - Возвращает все записи о пропусках
GET /skippedClass/{Guid записи} - возвращает запись о пропуске по айди
GET /skippedClass/?groupName - в строке запроса принимает название группы, возвращает List<SkippedClass>, который содержит все пропуски для данной группы
POST /skippedClass - в теле принимает SkippedClassInput, создаёт его в базе
DELETE /skippedClass/{Guid записи} - помечает запись удалённой в базе данных, возвращает OK

GET /student - возвращает лист всех студентов
GET /student/{номер студенческого} - возвращает студента по номеру студака
POST /student/ - создаёт судента в базе, при ошибке возвращает Problem
PUT /student/ - обычный пут, обновляет запись в бд и возвращает Ok
DELETE /student/{номер студенческого} - помечает студента как IsDeleted
GET /student/search/?term={поисковый терм}&group={название группы} - возвращает всех студентов, которых нашёл по этим параметрам

POST /user/register - в теле запроса принимает RegistrationInput. Не требует авторизации. Возвращает Dictionary ошибок, если ввод не прошёл валидацию, или 400 BadRequest, если ошибка возникла со стороны сервера. Создаёт нового пользователя в таблице User
POST /user/authorize - в теле запроса принимает AuthorizationInput. Не требует авторизации. Возвращает Dictionary ошибок, если ввод не прошёл валидацию, или 401 Unauthorized, если авторизации не случается. Возвращает строковуюю версию JWT токена, если авторизация прошла успешною.
GET /user/ - возвращает всех пользователей
GET /user/?id={Guid искомого юзера} - возвращает пользователя по гуиду
DELETE /user/?id={Guid удаляшки} - помечает пользователя как IsDeleted
GET /user/search/?term={поисковый запрос} = возвращает всех найденных пользователей по запросу

GET /delay/ - возвращает все опоздания
GET /delay/{id записи} - возвращает конкретную запись об опоздании
POST /delay/ - в теле принимает StudentDelayInput и создаёт его в БД
DELETE /delay/{id записи} - помечает запись как IsDeleted
GET /delay/?student={номер студака} - возвращает все опоздания студента